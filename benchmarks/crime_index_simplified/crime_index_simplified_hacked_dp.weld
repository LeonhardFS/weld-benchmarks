|_inp0: vec[f64], _inp1: vec[vec[f64]], _inp2: vec[i64]|
  result(
    for(
      zip(
        _inp1,
        _inp0
      ),
      merger[f64,+],
      |b,i,data|
        (let e=({data.$0,(data.$1>(f64(500000)))});if(
          e.$1,
          merge(b,(
            let dot_product=(
              (lookup(e.$0, 0L) * f64(lookup(_inp2, 0L))) +
              (lookup(e.$0, 1L) * f64(lookup(_inp2, 1L))) +
              (lookup(e.$0, 2L) * f64(lookup(_inp2, 2L)))) / f64(100000.00);
            let temp1=(
              let temp2={dot_product, dot_product >= f64(0.02)};
              if(
                temp2.$1,
                (f64(0.02)),
                temp2.$0
              )
            );
            let temp3=({temp1,(temp1<(f64(0.01)))});
            if(
              temp3.$1,
              (f64(0.01)),
              temp3.$0
            ))),
          b
        ))
    )
  )
